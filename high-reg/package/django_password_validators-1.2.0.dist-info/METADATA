Metadata-Version: 2.1
Name: django-password-validators
Version: 1.2.0
Summary: Additional libraries for validating passwords in Django 1.11 or later.
Home-page: https://github.com/fizista/django-password-validators
Author: Wojciech Banas
Author-email: fizista@gmail.com
License: BSD
Keywords: django password validator
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python
Classifier: Operating System :: OS Independent
Classifier: Topic :: Security
Requires-Dist: django (>=1.11)
Provides-Extra: test
Requires-Dist: tox (>=2.3) ; extra == 'test'

==========================
Django Password Validators
==========================

Additional libraries for validating passwords in Django 2.2.8 or later.

django-password-validators requires Django 2.2.8 or greater.

The application works well under python 3.x and 2.x versions.

Django version after the number 1.9, allows you to configure password validation.
Configuration validation is placed under the variable AUTH_PASSWORD_VALIDATORS_.


Installation
============

Just install ``django-password-validators`` via ``pip``::

    $ pip install django-password-validators


Validators
==========

------------------------
UniquePasswordsValidator
------------------------
Validator checks if the password was once used by a particular user. 
If the password is used, then an exception is thrown, of course.

For each user, all the passwords are stored in a database.
All passwords are strongly encrypted.

Configuration...

In the file settings.py we add ::

    INSTALLED_APPS = [
        ...
        'django_password_validators',
        'django_password_validators.password_history',
        ...
    ]

   AUTH_PASSWORD_VALIDATORS = [
       ...
       {
           'NAME': 'django_password_validators.password_history.UniquePasswordsValidator',
       },
       ...
   ]

   # If you want, you can change the default hasher for the password history.
   # DPV_DEFAULT_HISTORY_HASHER = 'django_password_validators.password_history.hashers.HistoryHasher'

--------------------------
PasswordCharacterValidator
--------------------------

The validator checks for the minimum number of characters of a given type.

In the file settings.py we add ::

    INSTALLED_APPS = [
        ...
        'django_password_validators',
        ...
    ]

   AUTH_PASSWORD_VALIDATORS = [
       ...
       {
           'NAME': 'django_password_validators.password_character_requirements.password_validation.PasswordCharacterValidator',
           'OPTIONS': {
                'min_length_digit': 1,
                'min_length_alpha': 2,
                'min_length_special': 3,
                'min_length_lower': 4,
                'min_length_upper': 5,
                'special_characters': "[~!@#$%^&*()_+{}\":;'[]"
            }
       },
       ...
   ]


.. _AUTH_PASSWORD_VALIDATORS: https://docs.djangoproject.com/en/1.9/ref/settings/#std:setting-AUTH_PASSWORD_VALIDATORS


